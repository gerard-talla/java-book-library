plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'org.openapi.generator' version '7.4.0'
	id "io.swagger.core.v3.swagger-gradle-plugin" version "2.2.22"
}

group = 'com.agents'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
	set('springAiVersion', "1.0.0-M1")
}

dependencies {
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter'
	compileOnly 'org.projectlombok:lombok'
	compileOnly 'org.openapitools:jackson-databind-nullable:0.2.6'
	compileOnly 'javax.annotation:javax.annotation-api:1.3.2'
	compileOnly 'javax.servlet:javax.servlet-api:4.0.1'
	compileOnly 'javax.validation:validation-api:2.0.1.Final'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
	}
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

openApiValidate {
	inputSpec = "$rootDir/contracts/apispec.yaml"
	recommend = true
}

openApiGenerate {
	generatorName = "spring" // Generates a Java SpringBoot Server application using the SpringDoc integration.
	inputSpec.set("$rootDir/contracts/apispec.yaml")
	outputDir.set("$buildDir/generated/api")
	apiPackage = "com.agents.java_book_library.api"
	invokerPackage = "com.agents.java_book_library.api"
	modelPackage = "com.agents.java_book_library.model"
	modelNameSuffix = "DTO"
	validateSpec = true
	generateApiTests.set(false)
	configOptions = [
			useLombok: "true",
			java17: "true",
			dateLibrary: "java17",
			interfaceOnly: "true",
			useBeanValidation: "true"
	]
}

// Include the generated api in the main java source set
sourceSets {
	main {
		java {
			srcDir("$buildDir/generated/api/src/main/java")
		}
	}
}
